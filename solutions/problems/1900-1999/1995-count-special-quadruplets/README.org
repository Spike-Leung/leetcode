* O(N^4) 的暴力解
  由于 a + b + c = d && a < b < c < d，其实就是找数组中有多少个 d 符合条件。

  那就从 d 的下标开始遍历，知道遍历完数组，判断每一个 a + b + c 是否等于 d。

  遍历过程中，由于 a b c d 都大于 1， 如果 a b c 任意一个大于 d，他们的和肯定会
  大于 d，对于这样的 a, b, c 可以提前跳过不去计算。

  总体就是 a b c d 都循环遍历一次，因此时间复杂度是 O(N^4)

* O(N^2) 哈希表优化
  [[https://leetcode-cn.com/problems/count-special-quadruplets/solution/tong-ji-te-shu-si-yuan-zu-by-leetcode-so-50e2/][统计特殊四元组]]

  a + b + c = d 等价于 a + b = d - c

  遍历 a，b 的所有组合，就能得到 d - c 的所有组合，而 c , d 的取值范围
  是 b < c < d < n, 可以用一个哈希表存储所有 d - c 的组合，然后遍历
  a 和 b ，看 a + b 的组合中，有多少个在哈希表中出现，出现的就满足 a +
  b = d - c 的条件，满足的个数就是答案。

  为了不去遍历 c 和 d， 可以让 b 逆序遍历，这样在 b 减少的过程，c 是增
  大的，当 b + 1 变为 b, 则 c 的取值范围中多了 b + 1 这个可选值，于是
  每次 b 减少，则 c 多一个选项，遍历 d 去统计 d - c 的组合，存入哈希表
  中，用来判断 a + b
