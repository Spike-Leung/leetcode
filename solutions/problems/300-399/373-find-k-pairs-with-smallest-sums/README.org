- [[https://leetcode-cn.com/problems/find-k-pairs-with-smallest-sums/solution/cha-zhao-he-zui-xiao-de-kdui-shu-zi-by-l-z526/][查找和最小的K对数字]]
- [[https://leetcode-cn.com/problems/find-k-pairs-with-smallest-sums/solution/tong-ge-lai-shua-ti-la-you-xian-ji-dui-l-fw7y/][【彤哥来刷题啦】优先级队列 & 两种写法！]]

* 优先队列 / 最小堆
  最容易想到的解法是，把所有数对组合列出来，然后根据和大小排序，截去前 k 个数对。

  但是因为只要 k 个数对，没必要全部列出来，如果可以遍历 k 次，每次取出最小的数对，
  那么问题就比较容易了。

  每次能够从一堆数对里，取出最小的一个，可以联想到用优先队列，最小堆这样的数据结构。

  每次从最小堆中，获取堆顶，对应的就是当前最小的数对，之后，由于两个数组的数据是排序的，
  当堆顶的出堆后，就要把堆顶这个最小数对后的次小数对加入堆中，可能的最小数对是，(x + 1, y)
  或者 (x, y + 1) ，即要不从第一个数组往后取一个数字，要不从第二个数组往后取一个数字，都是
  可能的次小数对，把他们都添加道堆里。但是可能会添加了重复的数对，需要判断一下。一个更好的办法是，
  先把所有可能的 x 都先放入堆中，即(x1, 0), (x2, 0) (x3, 0)...(xn, 0), 之后只要增加 y 就可以了，
  不是同时对 x y 都递增，就不用判断重复的问题。

  难点在于 js 中没有堆的结构，需要熟悉堆的实现，实现一个最小堆。
