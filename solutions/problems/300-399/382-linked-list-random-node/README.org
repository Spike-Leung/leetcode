* 思路
随机获取，可以初始化时，先遍历一遍链表，把值存到一个数组中，然后从数组中随机返回一个数即可。

但这种方法，只适合固定长度的链表，如果链表长度可能很长，而且长度也不确定，就没法这么做了。

由于链表长度很长，如果都存到内存，内存可能不足，无法全部存入，又要获取每个节点的概率一样，
怎么可以实现呢？

有人设计了一种叫 [[https://zh.wikipedia.org/wiki/%E6%B0%B4%E5%A1%98%E6%8A%BD%E6%A8%A3][水塘抽樣 (Reservoir sampling)]] 的算法，处理这样的问题。

原理是，每个数要获取的概率一样，那么假设 n 个数，每个数的获取概率应该为 1 / n;

每次读取一个值，假设已经读取了 i 个值，那么这第 i 个值被获取的概率应该为 1 / i

之后再读取一个值，则有 i + 1 个值，那么，这第 i + 1 个值被选中的概率为 1 / (i + 1)

而之前 i 个值时，我们也选了一个数字，此时是用之前的值，还是第 i + 1 个值呢？

可以通过一个数组 [0, i + 1) 中选取一个数字，判断是不是 0, 0 被选中的概率就是 1 / (i + 1),
没选中 0 的概率为 1 - 1 / (i + 1)

如果选中了 0，那么则使用第 i + 1 个的值，如果选中的不是 0，则保留之前选的值。

对于之前选的值而言，被选中的概率其实也是 1 / (i + 1)，累计之前的所有概率相乘，最后还是 1 / (i + 1),
具体证明可以看参考链接。


* 参考
  - [[https://github.com/labuladong/fucking-algorithm/blob/master/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E7%B3%BB%E5%88%97/%E6%B0%B4%E5%A1%98%E6%8A%BD%E6%A0%B7.md][随机算法之水塘抽样算法]]
  - [[https://leetcode-cn.com/problems/linked-list-random-node/solution/gong-shui-san-xie-xu-shui-chi-chou-yang-1lp9d/][【宫水三叶】蓄水池抽样运用题]]
