这道题一开始想到的是，用两个数组，遍历一遍原数组，一个放奇数，一个放偶数，最后合并数组。

书中的做法是改变原数组，不适用新的数组空间，遍历一次，碰到偶数就取出，然后把偶数后的元素前移，
数组的最后就会多出一个空间，把取出的偶数放到最后即可。但每次移动数组都需要 O(n), 总体就是 O(n^2)
效率上不太好。

既然目的是把奇数放到前面，把偶数放到后面，不断的交换两个元素的位置，涉及到交换，可以考虑尝试用
双指针。

一个指向元素的第一个元素，一个指向元素的最后一个元素，当左指针扫描到奇数，则往后加一，右指针扫描到
偶数，则往前减一。

一轮扫描过后，左指针会指向偶数，右指针会指向奇数，此时则进行交换。不断重复，直到 左指针 大于等于 右指针，
此时就整个数组扫描完成了。

这道题只是交换奇数偶数，如果说是把所有3的倍数放到前面呢？或者把质数放到前面？此时，就需要考虑可扩展性，
把比较代码抽象出来作为参数传入，应对多种情况。
