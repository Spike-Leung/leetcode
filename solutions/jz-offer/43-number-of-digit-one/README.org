- [【动画模拟】我太喜欢这个题了](https://leetcode-cn.com/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof/solution/dong-hua-mo-ni-wo-tai-xi-huan-zhe-ge-ti-vxzwc/)

最直白的方法就是从 0 开始循环遍历到 n，每次累计出现 1 的次数，
对于 x 位的数字 n，要遍历 n 次，每次分析每个位需要 logx 时间，
时间复杂度为 O(NlogN)

如果不想分析每个数字，就得分析 1 在数字中出现的规律。

题解的做法是分进位进行统计，分别统计 个位，十位，百位...中出现 1 的次数，最后进行累加即可。

对于每个进位，例如十位，又得进行分类讨论：

- 如果十位为 0， 如 1101，那么对于 1101，十位为 1 的数字有几个？
  十位为 1 的数字有， 0010 ~ 1019, 总共有 11 * 10 种，即 高位 * 位数


- 如果十位为 1， 如 1111，那么对于 1111，十位为 1 的数字有几个？
  1111 可以分为: 0000 ~ 1019 (11 * 10 个), 1110 ~ 1111 (2) 共 11 * 10 + 1 + 1, 即 高位 * 位数 + 低位 + 1


- 如果十位为 2 ~ 9, 如 1124，那么对于 1124，十位为 1 的数字有几个？
  1114 可以分为 0000 ~ 1019(11 * 10), 1110 ~ 1119 (10) 共 11 * 10 + 10 即 高位 * 位数 + 位数

根据以上得到的规律，对数字的每一位进行统计，最后累加就是 1 出现的次数。
