最直接的方法，从 0 开始枚举数字，并且累计位数，直到位数大于 n，此时 n 对应的数字，
就是当前枚举的数中的某一位，再从数中找出来。

这样显然比较慢，此时就要看看数字有没有什么规律。

观察发现，数字的序列，是从一位数，到二位数，三位数，四位数...每个位都对应着一个范围，
那么可以通过计算，得到 n 处于哪个范围区间，找从区间中找到 n 对应的数字。通过一个个范围
地取比较，可以一下子省去很多比较工作。

范围的规律如下：

一位数: 0 ~ 9
二位数:
  - minIndex 9 + 1 = 10 (下一个范围的最小小标为上一个范围的最大下标 + 1)
  - maxIndex 9 + (99 - 10 + 1) * 2 = 9 + 180 = 189 （下一个范围的最大下标，为上一个范围的最大下标加上下一个范围的下标总和）
    - 计算下一个范围有多少个数字，再乘以位数就可以获得下一个范围的下标总和
三位数:
  - minIndex 189 + 1 = 190
  - maxIndex 189 + (999 - 100 + 1) * 3 = 189 + 2700 = 2889
...


假如 n 为 1000，可以判断出 n 在三位数所在的范围（190 ~ 2889），
然后要计算 n 对应三位数的哪个数字，可以用三位数的最小值，加上 n 相对于最小值的偏移量，即:

100 + (1000 - 190) / 3 = 100 + 270 = 370

余数为 0

这就表示 1000位对应的数字就是 370，由于余数为 0，即刚好是这个数的第一位，也就是 3
