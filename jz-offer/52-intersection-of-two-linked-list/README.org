[[https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/solution/gong-shui-san-xie-zhao-liang-tiao-lian-b-ifqw/][【宫水三叶】一题五解：找「两条链表的第一个公共节点」]]

这道题有好几种方法：

* 暴力遍历
  遍历链表 A 的节点，对每个节点都去链表 B 找有没有相同的，时间复杂度是 O(MN)

* 利用哈希表
  先遍历一条链表，将所有节点先存起来，再遍历另一条链表，判断节点是否在哈希表中出现即可。
  可以节省一些时间，时间复杂度为 O(M + N), 空间复杂度为 O(N)

* 利用栈去解决
  如果可以从后往前去数节点，只要数到第一个相同的节点，就是答案了。但是链表默认是
  没有指向前面节点的指针的。

  想先判断链表后面的节点，这种后进先出的结构，可以联想到栈，用两个栈分别存储链表，
  然后每次一起弹出一个元素，当元素不同时，上一次弹出的就是答案。

  时间复杂度为 O(M + N), 空间复杂度为 O(M + N)

* 差值法
  如果两条链表，都从距离第一个相交节点相同距离的地方出发，每次一起走一个节点，最终肯定会在相交点相交。
  但现在两者距离第一个相交节点的距离都不同。

  因此，先遍历两条链表，计算到达第一个相交节点前的距离差值，让长的先走，
  直到两者距离第一个相交点的距离一样，再一起走，相遇时就是答案。

  时间复杂度是 O(M + N)
