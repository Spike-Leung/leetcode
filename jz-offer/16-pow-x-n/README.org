算次方，只要遍历然后把基数不断相乘即可。

但是需要考虑输入，如果次方是负数或者 0 呢？

如果是 0，需要返回 1，如果是负数，则要计算后取倒数。

另外，如果次方很大，例如题目中，最大是 2 的 31 次方，如果遍历，就会很慢。

是否有效率更高的呢？

2 ^ 16 = 2 ^ 8 * 2 ^ 8 (偶数)
2 ^ 15 = 2 ^ 7 * 2 ^ 7 * 2 (奇数)

利用上面的规律，通过递归去求值，可以大大减少遍历的次数。

另外，在判断奇偶时，以及次方除法时，可以利用位运算，进一步提高效率。
