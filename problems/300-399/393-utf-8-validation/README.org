* 思路
  - 遍历 data，将 data[i] 都转成 8 位的二进制形式
  - 判断开头的 1 的个数，决定 data[i] 是一个字节 (0开头，一个 1 都没有)，还是 n 个字节
  - 如果是一个字节，则继续遍历下一个
  - 如果是 n 个字节，统计字节数，往后遍历 n - 1 个，看是否有 n - 1 个，且都以 10 开头
  - 在实际处理的时候，不需要把数字转成二进制再去算 1 的个数，可以利用二进制的与操作，判断每一位是否为 1
    - 如： data[i] & 10000000， 可以判断最高位是否为 1，其他位继续右移判断即可
    - 判断是否为 10 开头，可以判断 ~10000000 & data[i] && !(01000000 & data[i])~ 是否成立
  - 要注意特殊情况处理
    - 一个字节数超过 4 的数字，例如 250，它的二进制表示为 11111010
    - 单独出现的，以 10 开头的数字，例如 [145]， 145 的二进制表示为 10010001
