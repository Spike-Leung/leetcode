* 暴力解
  把所有可能的组合组成一个哈希表，然后拆解数字的每一位，去对应哈希表，获得对应的罗马字符。

  #+BEGIN_SRC javascript
  const romanMap = {
    1: "I",
    2: "II",
    3: "III",
    4: "IV",
    5: "V",
    6: "VI",
    7: "VII",
    8: "VIII",
    9: "IX",
    10: "X",
    20: "XX",
    30: "XXX",
    40: "XL",
    50: "L",
    60: "LX",
    70: "LXX",
    80: "LXXX",
    90: "XC",
    100: "C",
    200: "CC",
    300: "CCC",
    400: "CD",
    500: "D",
    600: "DC",
    700: "DCC",
    800: "DCCC",
    900: "CM",
    1000: "M",
    2000: "MM",
    3000: "MMM",
    4000: "MMMM",
  };
  #+END_SRC

* 贪心算法
  [[https://leetcode-cn.com/problems/integer-to-roman/solution/zheng-shu-zhuan-luo-ma-shu-zi-by-leetcod-75rs/][整数转罗马数字]]
  观察发现，转罗马数字时，对于罗马数字从左到右的每一位，选择尽可能大的符号值。

  那就将罗马数字按从大到小去排，然后用目标数，不断地减去最大的罗马数字，直到目标数字变成 0
