* 思路
  要构建二叉搜索树，切链表是排序的，容易想到，每次取链表中间的节点作为根节点，
  用左边剩下节点构建左子树，用右边剩下节点构建右子树。

  问题是怎么从链表找到中间节点？

  一个很容易想到的办法是，遍历链表存到数组里，数组根据下标计算就可以找到中间节点。
  但这需要 O(n) 的空间去存储节点的值。

  另一个办法是使用快慢指针，快指针每次走两步，慢指针每次走一步，当快指针走到尾的时候，
  慢指针指向的就是中间节点。

  找到中间节点后，只要递归构造二叉搜索树即可。

  还有一种办法是, 可以想到有序链表，可以由二叉搜索树中序遍历得到。

  因此可以模拟二叉搜索树的中序遍历过程，当中序遍历到最左节点时，其实就是对应当前链表的第一个节点。

  模仿中序遍历，然后依次挪动链表指针去构造二叉搜索树。

* 参考
  - [[https://leetcode.cn/problems/convert-sorted-list-to-binary-search-tree/solution/you-xu-lian-biao-zhuan-huan-er-cha-sou-suo-shu-1-3/][有序链表转换二叉搜索树]]
